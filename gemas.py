import requests,discord,os,asyncio,hashlib,time as tm
from time import time

#carregar variaveis env 
from dotenv import load_dotenv
load_dotenv()


USER_LOGIN = os.getenv('user_login')
KEY = os.getenv('key')
KEY_LOGIN = os.getenv('key_login')


GEMS_1 = os.getenv('economy_gems')
GEMS_CHARGE = os.getenv('economy_charge')
GEMS_MENU = os.getenv('economy_menu')
GEMS_ROD = os.getenv('economy_rode')



#-----------------------

#-----------------------




def hashstumble(auth,url_pam,json):
    key = KEY
    ts = int(time())
    a = ''
    data = f'{json}'
    hash1 = f"{key}{auth['DeviceId']}{auth['GoogleId']}{auth['Token']}{str(ts)}{url_pam}{data}"
    json  = {"DeviceId":auth['DeviceId'],"GoogleId":auth['GoogleId'],"FacebookId":"","AppleId":"","Token":auth['Token'],"Timestamp":ts,"Hash":hashlib.sha1(bytes(a.join(hash1), 'utf-8')).hexdigest()}
    return str(json)


async def logint(data,ctx):
    AUTH = {"DeviceId":"id_smartphone","GoogleId":"","FacebookId":"","AppleId":"","Token":"conta_token","Timestamp":1657411202,"Hash":"128053146036d1bfcda08eedcc177bb625f90bb1"}
    BAU = {"Quantidade_bau":0}
    GEMAS = {"Quantidade_gemas":0}
    GEMAS2 = {"Quantidade_gemas2":0}

    headers = {
    'Content-Type': 'application/json',
    'use_response_compression': 'true',
    'Host': 'kitkabackend.eastus.cloudapp.azure.com:5010',}
    login_main = requests.post(USER_LOGIN, headers=headers,data=data)
    r = login_main 
    if r.status_code == 403 or r.status_code == 404 or r.status_code == 400 or r.text == "BANNED":
        print('Nao foi possivel logar', r.text)
        await ctx.edit(embed=discord.Embed(color=0xA020F0, title="Não foi possível logar",description=f"{r.text}"))

    print(r.json()['User']['Username'] + " | token: " + r.json()['User']['Token']+ " | googleid: " + str(r.json()['User']['GoogleId']) , "Skins",":",len(r.json()['User']['Skins']))

    AUTH['Token'] = r.json()['User']['Token']
    AUTH['DeviceId'] = r.json()['User']['DeviceId']
    AUTH['FacebookId'] = r.json()['User']['FacebookId']
    print(AUTH)

    for i in r.json()['User']['Balances']:
        if i['Name'] == "skin_purchase":
             BAU['Quantidade_bau'] = i['Amount']
        if i['Name'] == "video_gems":
             GEMAS['Quantidade_gemas'] = i['Amount']
        if i['Name'] == "gem_purchase":
             GEMAS2['Quantidade_gemas2'] = i['Amount']

    balances = []

    for i in r.json()['User']['Balances']:
        if i['Name'] == "gems":
            balances.append(f"**Gemas**: {i['Amount']}\n")
        elif i['Name'] == "dust":
            balances.append(f"**Dust:** {i['Amount']}")
    #print('\n'.join(balances))
    informacoe = f"**Nick**: {r.json()['User']['Username']}\n**Token**:  ||{r.json()['User']['Token']}||\n**GoogleId**:  ||{r.json()['User']['GoogleId']}||\n**FacebookId**:  ||{r.json()['User']['FacebookId']}||\n**Skins**: {len(r.json()['User']['Skins'])} \n {''.join(balances)}"

    await ctx.edit(embed=discord.Embed(color=0xA020F0, title="Informação de login",description=informacoe))

    auth = hashstumble(AUTH,'/economy/purchase/free_gems','')
    headers = {
    'Content-Type': 'application/json',
    'authorization': str(auth),
    'use_response_compression': 'true',
    'Host': 'kitkabackend.eastus.cloudapp.azure.com:5010',}
    http = requests.Session()
    quant = 0
    #print("Gemas quantidade: ",GEMAS['Quantidade_gemas'])

    while quant < GEMAS['Quantidade_gemas']:
        free_gems = http.get(GEMS_1, headers=headers)
        await asyncio.sleep(0.7)
        quant += 1
        #free_gems_round =  0
        #informacoe = f"**Nick**: {r.json()['User']['Username']}\n**Token**:  ||{r.json()['User']['Token']}||\n**GoogleId**:  ||{r.json()['User']['GoogleId']}||\n**FacebookId**:  ||{r.json()['User']['FacebookId']}||\n**Skins**: {len(r.json()['User']['Skins'])}\n{''.join(balances)}\nRound_1_gemas: {free_gems_round}"
        #await ctx.edit(embed=discord.Embed(color=0xA020F0, title="Informação de login #1- IS OK",description=informacoe))
        #await gems2(ctx,login_main,0) 

    else:
        free_gems = http.get(GEMS_1, headers=headers)
        print(free_gems.text)
        informacoe = f"**Nick**: {r.json()['User']['Username']}\n**Token**:  ||{r.json()['User']['Token']}||\n**GoogleId**:  ||{r.json()['User']['GoogleId']}||\n**FacebookId**:  ||{r.json()['User']['FacebookId']}||\n**Skins**: {len(r.json()['User']['Skins'])}\n{''.join(balances)}\nRound_1_gemas: Opção removida"
        await ctx.edit(embed=discord.Embed(color=0xA020F0, title="Informação de login #1- ELSE",description=informacoe))
        await gems2(ctx,login_main,AUTH,GEMAS2,BAU) 


async def gems2(ctx,data_r,AUTH,GEMAS2,BAU):
    print('--------Gems 2 is running------------')
    auth = hashstumble(AUTH,'/economy/purchase/gemvideo_charge','')
    headers = {
    'Content-Type': 'application/json',
    'authorization': str(auth),
    'use_response_compression': 'true',
    'Host': 'kitkabackend.eastus.cloudapp.azure.com:5010',}
    http = requests.Session()
    quant = 0
    while quant < 4:
        r = http.get(GEMS_CHARGE, headers=headers)
        await asyncio.sleep(1)
        quant += 1
    if GEMAS2['Quantidade_gemas2'] == 1:
        print('Gemas2')  
        auth2 = hashstumble(AUTH,'/economy/purchase/menu_free_gems','')
        headers2 = {
        'Content-Type': 'application/json',
        'authorization': str(auth2),
        'use_response_compression': 'true',
        'Host': 'kitkabackend.eastus.cloudapp.azure.com:5010',}
        menu_free_gems = http.get(GEMS_MENU, headers=headers2)
        menu_free_gems_gems = menu_free_gems.json()['User']['Balances'][3]['Amount']
        r = data_r
        
        balances = []

        for i in r.json()['User']['Balances']:
            if i['Name'] == "gems":
                balances.append(f"**Gemas**: {i['Amount']}\n")
            elif i['Name'] == "dust":
                balances.append(f"**Dust:** {i['Amount']}")
        print('informaçoes')
        informacoe = f"**Nick**: {r.json()['User']['Username']}\n**Token**:  ||{r.json()['User']['Token']}||\n**GoogleId**:  ||{r.json()['User']['GoogleId']}||\n**FacebookId**:  ||{r.json()['User']['FacebookId']}||\n**Skins**: {len(r.json()['User']['Skins'])}\n{''.join(balances)}\nRound_1_gemas: Removido\nRound_2_gemas: {menu_free_gems_gems}"
        print('edit')
        await ctx.edit(embed=discord.Embed(color=0xA020F0, title="Informação de login",description=informacoe))
        
        for i in menu_free_gems.json()['User']['Balances']:
            if i['Name'] == "gems":
                print('Gemas',":",i['Amount'])
        await bau(AUTH,BAU,ctx,data_r,menu_free_gems_gems)


async def bau(AUTH,BAU,ctx,data_r,menu_free_gems_gems):
    print('--------BAU is running------------')
    r = data_r
    if BAU["Quantidade_bau"] == 0:
        print("Bau == 0")
        informacoe = f"**Nick**: {r.json()['User']['Username']}\n**Token**:  ||{r.json()['User']['Token']}||\n**GoogleId**:  ||{r.json()['User']['GoogleId']}||\n**FacebookId**:  ||{r.json()['User']['FacebookId']}||\n**Skins**: {len(r.json()['User']['Skins'])}\n{''.join(balances)}\n```Round_1_gemas: Removid\nRound_2_gemas: {menu_free_gems_gems}\nRound_bau: Nenhum```"

        await ctx.edit(embed=discord.Embed(color=0xA020F0, title="Informação de login",description=informacoe))
        return
    auth = hashstumble(AUTH,f'/economy/purchasedrop/FREE_SPIN/{BAU["Quantidade_bau"]}','')
    headers = {
    'Content-Type': 'application/json',
    'authorization': str(auth),
    'use_response_compression': 'true',
    'Host': 'kitkabackend.eastus.cloudapp.azure.com:5010',}
    bau = requests.get(f'{GEMS_ROD}{BAU["Quantidade_bau"]}', headers=headers)
    for i in bau.json()['User']['Balances']:
        if i['Name'] == "gems":
            print(i['Name'],":",i['Amount'])
        elif i['Name'] == "dust":
            print(i['Name'],":",i['Amount'])
    print("Quantidade de skins",":",len(bau.json()['User']['Skins']))


    balances = []
    for i in r.json()['User']['Balances']:
        if i['Name'] == "gems":
            balances.append(f"**Gemas**: {i['Amount']}\n")
        elif i['Name'] == "dust":
            balances.append(f"**Dust:** {i['Amount']}")
    
    bau_gems = bau.json()['User']['Balances'][3]['Amount']
    bau_dust = bau.json()['User']['Balances'][11]['Amount']
    
    run_calculo = f"O bot pegou MAIS DE {bau_gems-r.json()['User']['Balances'][3]['Amount']} gemas, {bau_dust-r.json()['User']['Balances'][11]['Amount']} dust, {len(bau.json()['User']['Skins'])-len(r.json()['User']['Skins'])} skins!"

    informacoe = f"**Nick**: {r.json()['User']['Username']}\n**Token**:  ||{r.json()['User']['Token']}||\n**GoogleId**:  ||{r.json()['User']['GoogleId']}||\n**FacebookId**:  ||{r.json()['User']['FacebookId']}||\n**Skins**: {len(r.json()['User']['Skins'])}\n{''.join(balances)}\n```Round_1_gemas: Removid\nRound_2_gemas: {menu_free_gems_gems}\nRound_bau: Gemas[{bau_gems}] - Skins[{len(bau.json()['User']['Skins'])}]```\n**{run_calculo}**"


    await ctx.edit(embed=discord.Embed(color=0xA020F0, title="Bau ok",description=informacoe))
    

async def function_gemas(data,ctx):
    await logint(data,ctx)
