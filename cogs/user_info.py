import requests,discord,json,os

from discord.ext import commands


#carregar variaveis env 
from dotenv import load_dotenv
load_dotenv()

USER_LOGIN = os.getenv('user_login')
PATH_COGS = os.getenv('path_accounts')

#-----------------------

class LoginInforma칞칚o(commands.Cog):
    def __init__(self,bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_command_error(self, ctx, error):
        if isinstance(error, commands.CommandNotFound):
            await ctx.send(embed=discord.Embed(color=0xA020F0, description=f"Esse comando n칚o existe!"))
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send(embed=discord.Embed(color=0xA020F0, description=f"O comando est치 faltando o argumento, por favor envie a mensagem com os argumentos necess치rios"))
        if isinstance(error, commands.BadArgument):
            await ctx.send(embed=discord.Embed(color=0xA020F0, description=f"O argumento est치 digitado de maneira errada, tentou conferir se executou o comando corretamente?"))



    @commands.command()
    async def info(self,ctx,numero: int):
        json_contas = open(PATH_COGS,"r")
        contas = json.load(json_contas)
        json_contas.close()

        if len(contas['contas']) < numero:
            print(len(contas['contas']))
            await ctx.send(embed=discord.Embed(color=0xA020F0, description=f"Tem certeza que esse n칰mero est치 na lista de contas?"))
            

        data = f"{contas['contas'][numero-1]}"
        headers = {
        'Content-Type': 'application/json',
        'use_response_compression': 'true',
        'Host': 'kitkabackend.eastus.cloudapp.azure.com:5010',}
        r = requests.post(USER_LOGIN, headers=headers,data=data)
        if r.status_code == 403 or r.status_code == 404 or r.status_code == 400 or r.text == "BANNED":
            await ctx.send(embed=discord.Embed(color=0xA020F0, title="N칚o foi poss칤vel logar",description=f"{r.text}"))

        balances = []
        for i in r.json()['User']['Balances']:
            if i['Name'] == "gems":
                balances.append(f"**Gemas**: {i['Amount']}\n")
            elif i['Name'] == "dust":
                balances.append(f"**Dust:** {i['Amount']}")
        print('\n'.join(balances))

        informacoe = f"**Usu치rio(n칚o 칠 o nickname)**: {data['Usuario']}\n**Token(ATUALIZADO AGORA)**: `{r.json()['User']['Token'][0:5]}...`\n**Google**: `{r.json()['User']['GoogleId']}`\n**Facebook**: `{r.json()['User']['FacebookId']}`\n**Localiza칞칚o:** `{r.json()['User']['Country']}`\n[Formato: ANO/MES/DIA]\n**Criado em:** `{r.json()['User']['Created'][0:10]}`\n**Ultimo login:** `{r.json()['User']['LastLogin'][0:10]}`\n**Skill:** `{r.json()['User']['SkillRating']}`\n**Exp:** `{r.json()['User']['Experience']}`\n**Coroas:** `{r.json()['User']['Crowns']}`\n**Quantidade de skins:** `{len(r.json()['User']['Skins'])}`\n**Passe de batalha[PAGO]:** `{''.join(['N칚o' if r.json()['User']['BattlePass']['HasPurchased'] == False else 'Sim'])}`\n**N칤vel no passe:** `{r.json()['User']['BattlePass']['PassTokens']/100}`\n{''.join(balances)}"

        Login_Embed = discord.Embed(color=0xA020F0, title=f"**{r.json()['User']['Username']}** 游댫", description=f"{informacoe}")
        Login_Embed.set_footer(text=f"{self.bot.user.name} - Account Management - Por Dasw", icon_url='https://i.pinimg.com/564x/7c/e1/fe/7ce1feb183febb3dfbd56753b1f1cea9.jpg')

        await ctx.send(embed=Login_Embed)


async def setup(bot):
    await bot.add_cog(LoginInforma칞칚o(bot))